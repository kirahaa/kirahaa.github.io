{"version":3,"file":"component---src-pages-using-typescript-tsx-b9ad10d71117e91d8c26.js","mappings":"uMAaA,MA+BaA,EAA0B,IAAMC,EAAAA,cAACC,EAAAA,EAAG,CAACC,MAAM,qBAExD,UAjCwDC,IAAAA,IAAC,KACvDC,EAAI,KACJC,EAAI,SACJC,GACD,SACCN,EAAAA,cAACO,EAAAA,EAAM,CAACL,MAAM,mBAAmBI,SAAUA,GACzCN,EAAAA,cAAAA,KAAAA,KAAI,0CACJA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,4BAAM,YAAe,0CAClC,4BAAM,YAAe,qCACzC,4BAAM,oBAAuB,MAEvCA,EAAAA,cAAAA,IAAAA,KAAG,4CACwC,0BAAI,cAAe,oBACxD,0BAAI,cAAe,gBAAa,0BAAI,YAAa,UAEvDA,EAAAA,cAAAA,IAAAA,KAAG,kCAC8BK,EAAK,uBAAqB,IACxDD,EAAKI,KAAKC,UAAU,KAEvBT,EAAAA,cAAAA,IAAAA,KAAG,kCAC+B,IAChCA,EAAAA,cAAAA,IAAAA,CAAGU,KAAK,yEAAwE,kCAE5E,KAGNV,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,+CCaX,IA5CY,IAAuC,IAAD,MAArC,YAAEC,EAAW,MAAEX,EAAK,SAAEY,GAAU,EAC3C,MAAM,KAAEN,EAAI,kBAAEO,IAAsBC,EAAAA,EAAAA,gBAAe,cAqB7CC,EAAkBJ,GAAeL,EAAKU,aAAaL,YACnDM,EAAgC,QAApB,EAAGX,EAAKU,oBAAY,aAAjB,EAAmBhB,OACjCkB,MAAOC,GAAQN,EAEtB,OACE,gCACE,6BAAQI,EAAkBjB,EAAK,MAAMiB,EAAiBjB,GACtD,wBAAMoB,KAAK,cAAcC,QAASN,IAClC,wBAAMK,KAAK,WAAWC,QAASF,EAAKG,KAAKC,GAAQA,EAAIC,eACrD,wBAAMC,SAAS,WAAWJ,QAASrB,IACnC,wBAAMyB,SAAS,iBAAiBJ,QAASN,IACzC,wBAAMU,SAAS,UAAUJ,QAAQ,YACjC,wBAAMI,SAAS,SAASJ,QAAQ,+BAChC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,gBAAgBC,QAASrB,IACpC,wBAAMoB,KAAK,sBAAsBC,QAASN,IAC1C,wBAAMK,KAAK,2BAA2BC,QAAQ,gDAC7CT,EACA,C","sources":["webpack://kirahaa-blog/./src/pages/using-typescript.tsx","webpack://kirahaa-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  path,\n  location,\n}) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <em>typescript</em> via npm and\n      run <em>tsc --init</em> to create a <em>tsconfig</em> file.\n    </p>\n    <p>\n      You're currently on the page \"{path}\" which was built on{\" \"}\n      {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site, allMarkdownRemark } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n        allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n          group(field: {frontmatter: {tags: SELECT}}) {\n            fieldValue\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n  const {group: tags} = allMarkdownRemark\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta name=\"keywords\" content={tags.map((tag) => tag.fieldValue)} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content=\"https://kirahaa.github.io/\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      <meta name=\"google-site-verification\" content=\"C608y4_p7gSnKj36qeYdhOStKvFxBfbQTL6H7rirQsc\" />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","path","location","Layout","site","buildTime","href","Link","to","description","children","allMarkdownRemark","useStaticQuery","metaDescription","siteMetadata","defaultTitle","group","tags","name","content","map","tag","fieldValue","property"],"sourceRoot":""}