{"version":3,"file":"component---src-pages-index-js-e8adc44e80862d6b43cc.js","mappings":"yIAsDA,IA5CY,IAAuC,IAAD,MAArC,YAAEA,EAAW,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEC,EAAI,kBAAEC,IAAsBC,EAAAA,EAAAA,gBAAe,cAqB7CC,EAAkBN,GAAeG,EAAKI,aAAaP,YACnDQ,EAAgC,QAApB,EAAGL,EAAKI,oBAAY,aAAjB,EAAmBN,OACjCQ,MAAOC,GAAQN,EAEtB,OACE,gCACE,6BAAQI,EAAkBP,EAAK,MAAMO,EAAiBP,GACtD,wBAAMU,KAAK,cAAcC,QAASN,IAClC,wBAAMK,KAAK,WAAWC,QAASF,EAAKG,KAAKC,GAAQA,EAAIC,eACrD,wBAAMC,SAAS,WAAWJ,QAASX,IACnC,wBAAMe,SAAS,iBAAiBJ,QAASN,IACzC,wBAAMU,SAAS,UAAUJ,QAAQ,YACjC,wBAAMI,SAAS,SAASJ,QAAQ,+BAChC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,gBAAgBC,QAASX,IACpC,wBAAMU,KAAK,sBAAsBC,QAASN,IAC1C,wBAAMK,KAAK,2BAA2BC,QAAQ,gDAC7CV,EACA,C,uHCgBP,UA3DkB,IAAyB,IAAD,MAAvB,KAAEe,EAAI,SAAEC,GAAU,EACnC,MAAMC,GAAkC,QAAtB,EAAAF,EAAKd,KAAKI,oBAAY,aAAtB,EAAwBN,QAAK,QACzCmB,EAAQH,EAAKb,kBAAkBiB,MAErC,OAAqB,IAAjBD,EAAME,OAEN,gBAAC,IAAM,CAACJ,SAAUA,EAAUjB,MAAOkB,GACjC,gBAAC,IAAG,MACJ,yBAAG,8JAUP,gBAAC,IAAM,CAACD,SAAUA,EAAUjB,MAAOkB,GACjC,uBAAKI,UAAU,QACb,gBAAC,IAAG,CAACC,UAAU,IACf,uBAAKD,UAAU,SACb,sBAAIA,UAAU,aACXH,EAAMP,KAAIY,IACT,MAAMxB,EAAQwB,EAAKC,YAAYzB,OAASwB,EAAKE,OAAOC,KACpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACEL,UAAU,iBACVO,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAYjC,KAG/B,6BAAQwB,EAAKC,YAAYS,OAE3B,+BACE,qBACEC,wBAAyB,CACrBC,OAAQZ,EAAKC,YAAY1B,aAAeyB,EAAKa,SAEjDJ,SAAS,kBAIZ,OAMR,EAWN,MAAMK,EAAO,IAAM,gBAAC,IAAG,CAACtC,MAAM,a","sources":["webpack://kirahaa-blog/./src/components/seo.js","webpack://kirahaa-blog/./src/pages/index.js"],"sourcesContent":["/**\r\n * SEO component that queries for data with\r\n * Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\r\n */\r\n\r\nimport * as React from \"react\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\n\r\nconst Seo = ({ description, title, children }) => {\r\n  const { site, allMarkdownRemark } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            social {\r\n              twitter\r\n            }\r\n          }\r\n        }\r\n        allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\r\n          group(field: {frontmatter: {tags: SELECT}}) {\r\n            fieldValue\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n  const defaultTitle = site.siteMetadata?.title\r\n  const {group: tags} = allMarkdownRemark\r\n\r\n  return (\r\n    <>\r\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\r\n      <meta name=\"description\" content={metaDescription} />\r\n      <meta name=\"keywords\" content={tags.map((tag) => tag.fieldValue)} />\r\n      <meta property=\"og:title\" content={title} />\r\n      <meta property=\"og:description\" content={metaDescription} />\r\n      <meta property=\"og:type\" content=\"website\" />\r\n      <meta property=\"og:url\" content=\"https://kirahaa.github.io/\" />\r\n      <meta name=\"twitter:card\" content=\"summary\" />\r\n      <meta name=\"twitter:title\" content={title} />\r\n      <meta name=\"twitter:description\" content={metaDescription} />\r\n      <meta name=\"google-site-verification\" content=\"C608y4_p7gSnKj36qeYdhOStKvFxBfbQTL6H7rirQsc\" />\r\n      {children}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Seo\r\n","import * as React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/Bio\"\r\nimport Layout from \"../components/layout\"\r\nimport Seo from \"../components/seo\"\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n  const siteTitle = data.site.siteMetadata?.title || `Title`\r\n  const posts = data.allMarkdownRemark.nodes\r\n\r\n  if (posts.length === 0) {\r\n    return (\r\n      <Layout location={location} title={siteTitle}>\r\n        <Bio />\r\n        <p>\r\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\r\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\r\n          gatsby-config.js).\r\n        </p>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <div className=\"wrap\">\r\n        <Bio showTags={true} />\r\n        <div className=\"right\">\r\n          <ol className=\"post-list\">\r\n            {posts.map(post => {\r\n              const title = post.frontmatter.title || post.fields.slug\r\n              return (\r\n                <li key={post.fields.slug}>\r\n                  <article\r\n                    className=\"post-list-item\"\r\n                    itemScope\r\n                    itemType=\"http://schema.org/Article\"\r\n                  >\r\n                    <header>\r\n                      <h2>\r\n                        <Link to={post.fields.slug} itemProp=\"url\">\r\n                          <span itemProp=\"headline\">{title}</span>\r\n                        </Link>\r\n                      </h2>\r\n                      <small>{post.frontmatter.date}</small>\r\n                    </header>\r\n                    <section>\r\n                      <p\r\n                        dangerouslySetInnerHTML={{\r\n                            __html: post.frontmatter.description || post.excerpt,\r\n                        }}\r\n                        itemProp=\"description\"\r\n                      />\r\n                    </section>\r\n                  </article>\r\n                </li>\r\n              )\r\n               })}\r\n          </ol>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\n/**\r\n * Head export to define metadata for the page\r\n *\r\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\r\n */\r\nexport const Head = () => <Seo title=\"All posts\" />\r\n\r\nexport const pageQuery = graphql`\r\n  {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\r\n      nodes {\r\n        excerpt\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          date(formatString: \"MMMM DD, YYYY\")\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["description","title","children","site","allMarkdownRemark","useStaticQuery","metaDescription","siteMetadata","defaultTitle","group","tags","name","content","map","tag","fieldValue","property","data","location","siteTitle","posts","nodes","length","className","showTags","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","excerpt","Head"],"sourceRoot":""}