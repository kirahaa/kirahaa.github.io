{"version":3,"file":"component---src-pages-index-js-e8adc44e80862d6b43cc.js","mappings":"yIAsDA,IA5CY,IAAuC,IAAD,MAArC,YAAEA,EAAW,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEC,EAAI,kBAAEC,IAAsBC,EAAAA,EAAAA,gBAAe,cAqB7CC,EAAkBN,GAAeG,EAAKI,aAAaP,YACnDQ,EAAgC,QAApB,EAAGL,EAAKI,oBAAY,aAAjB,EAAmBN,OACjCQ,MAAOC,GAAQN,EAEtB,OACE,gCACE,6BAAQI,EAAkBP,EAAK,MAAMO,EAAiBP,GACtD,wBAAMU,KAAK,cAAcC,QAASN,IAClC,wBAAMK,KAAK,WAAWC,QAASF,EAAKG,KAAKC,GAAQA,EAAIC,eACrD,wBAAMC,SAAS,WAAWJ,QAASX,IACnC,wBAAMe,SAAS,iBAAiBJ,QAASN,IACzC,wBAAMU,SAAS,UAAUJ,QAAQ,YACjC,wBAAMI,SAAS,SAASJ,QAAQ,+BAChC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,gBAAgBC,QAASX,IACpC,wBAAMU,KAAK,sBAAsBC,QAASN,IAC1C,wBAAMK,KAAK,2BAA2BC,QAAQ,gDAC7CV,EACA,C,uHCgBP,UA3DkB,IAAyB,IAAD,MAAvB,KAAEe,EAAI,SAAEC,GAAU,EACnC,MAAMC,GAAkC,QAAtB,EAAAF,EAAKd,KAAKI,oBAAY,aAAtB,EAAwBN,QAAK,QACzCmB,EAAQH,EAAKb,kBAAkBiB,MAErC,OAAqB,IAAjBD,EAAME,OAEN,gBAAC,IAAM,CAACJ,SAAUA,EAAUjB,MAAOkB,GACjC,gBAAC,IAAG,MACJ,yBAAG,8JAUP,gBAAC,IAAM,CAACD,SAAUA,EAAUjB,MAAOkB,GACjC,uBAAKI,UAAU,QACb,gBAAC,IAAG,CAACC,UAAU,IACf,uBAAKD,UAAU,SACb,sBAAIA,UAAU,aACXH,EAAMP,KAAIY,IACT,MAAMxB,EAAQwB,EAAKC,YAAYzB,OAASwB,EAAKE,OAAOC,KACpD,OACE,sBAAIC,IAAKJ,EAAKE,OAAOC,MACnB,2BACEL,UAAU,iBACVO,WAAS,EACTC,SAAS,6BAET,8BACE,0BACE,gBAAC,EAAAC,KAAI,CAACC,GAAIR,EAAKE,OAAOC,KAAMM,SAAS,OACnC,wBAAMA,SAAS,YAAYjC,KAG/B,6BAAQwB,EAAKC,YAAYS,OAE3B,+BACE,qBACEC,wBAAyB,CACrBC,OAAQZ,EAAKC,YAAY1B,aAAeyB,EAAKa,SAEjDJ,SAAS,kBAIZ,OAMR,EAWN,MAAMK,EAAO,IAAM,gBAAC,IAAG,CAACtC,MAAM,a","sources":["webpack://kirahaa-blog/./src/components/seo.js","webpack://kirahaa-blog/./src/pages/index.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site, allMarkdownRemark } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n        allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n          group(field: {frontmatter: {tags: SELECT}}) {\n            fieldValue\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n  const {group: tags} = allMarkdownRemark\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta name=\"keywords\" content={tags.map((tag) => tag.fieldValue)} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content=\"https://kirahaa.github.io/\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      <meta name=\"google-site-verification\" content=\"C608y4_p7gSnKj36qeYdhOStKvFxBfbQTL6H7rirQsc\" />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/Bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <div className=\"wrap\">\n        <Bio showTags={true} />\n        <div className=\"right\">\n          <ol className=\"post-list\">\n            {posts.map(post => {\n              const title = post.frontmatter.title || post.fields.slug\n              return (\n                <li key={post.fields.slug}>\n                  <article\n                    className=\"post-list-item\"\n                    itemScope\n                    itemType=\"http://schema.org/Article\"\n                  >\n                    <header>\n                      <h2>\n                        <Link to={post.fields.slug} itemProp=\"url\">\n                          <span itemProp=\"headline\">{title}</span>\n                        </Link>\n                      </h2>\n                      <small>{post.frontmatter.date}</small>\n                    </header>\n                    <section>\n                      <p\n                        dangerouslySetInnerHTML={{\n                            __html: post.frontmatter.description || post.excerpt,\n                        }}\n                        itemProp=\"description\"\n                      />\n                    </section>\n                  </article>\n                </li>\n              )\n               })}\n          </ol>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\nexport const pageQuery = graphql`\n  {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["description","title","children","site","allMarkdownRemark","useStaticQuery","metaDescription","siteMetadata","defaultTitle","group","tags","name","content","map","tag","fieldValue","property","data","location","siteTitle","posts","nodes","length","className","showTags","post","frontmatter","fields","slug","key","itemScope","itemType","Link","to","itemProp","date","dangerouslySetInnerHTML","__html","excerpt","Head"],"sourceRoot":""}