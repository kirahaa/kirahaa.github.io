{"version":3,"file":"component---src-pages-404-js-64be01812ce74b7d1245.js","mappings":"yIAsDA,IA5CY,IAAuC,IAAD,MAArC,YAAEA,EAAW,MAAEC,EAAK,SAAEC,GAAU,EAC3C,MAAM,KAAEC,EAAI,kBAAEC,IAAsBC,EAAAA,EAAAA,gBAAe,cAqB7CC,EAAkBN,GAAeG,EAAKI,aAAaP,YACnDQ,EAAgC,QAApB,EAAGL,EAAKI,oBAAY,aAAjB,EAAmBN,OACjCQ,MAAOC,GAAQN,EAEtB,OACE,gCACE,6BAAQI,EAAkBP,EAAK,MAAMO,EAAiBP,GACtD,wBAAMU,KAAK,cAAcC,QAASN,IAClC,wBAAMK,KAAK,WAAWC,QAASF,EAAKG,KAAKC,GAAQA,EAAIC,eACrD,wBAAMC,SAAS,WAAWJ,QAASX,IACnC,wBAAMe,SAAS,iBAAiBJ,QAASN,IACzC,wBAAMU,SAAS,UAAUJ,QAAQ,YACjC,wBAAMI,SAAS,SAASJ,QAAQ,+BAChC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,gBAAgBC,QAASX,IACpC,wBAAMU,KAAK,sBAAsBC,QAASN,IAC1C,wBAAMK,KAAK,2BAA2BC,QAAQ,gDAC7CV,EACA,C,kGC5CP,MAWae,EAAO,IAAM,gBAAC,IAAG,CAAChB,MAAM,mBAErC,UAbqB,IAAyB,IAAxB,KAAEiB,EAAI,SAAEC,GAAU,EACtC,MAAMC,EAAYF,EAAKf,KAAKI,aAAaN,MAEzC,OACE,gBAAC,IAAM,CAACkB,SAAUA,EAAUlB,MAAOmB,GACjC,0BAAI,kBACJ,yBAAG,2DACI,C","sources":["webpack://kirahaa-blog/./src/components/seo.js","webpack://kirahaa-blog/./src/pages/404.js"],"sourcesContent":["/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }) => {\n  const { site, allMarkdownRemark } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n        allMarkdownRemark(sort: { frontmatter: { date: DESC } }) {\n          group(field: {frontmatter: {tags: SELECT}}) {\n            fieldValue\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n  const {group: tags} = allMarkdownRemark\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta name=\"keywords\" content={tags.map((tag) => tag.fieldValue)} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:url\" content=\"https://kirahaa.github.io/\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      <meta name=\"google-site-verification\" content=\"C608y4_p7gSnKj36qeYdhOStKvFxBfbQTL6H7rirQsc\" />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst NotFoundPage = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <h1>404: Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"404: Not Found\" />\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"names":["description","title","children","site","allMarkdownRemark","useStaticQuery","metaDescription","siteMetadata","defaultTitle","group","tags","name","content","map","tag","fieldValue","property","Head","data","location","siteTitle"],"sourceRoot":""}